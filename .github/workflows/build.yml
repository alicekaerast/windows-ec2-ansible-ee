name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: 'Version to tag the image with'
        default: latest

env:
  REGISTRY: ghcr.io
  ORIGINAL_IMAGE_NAME: ${{ github.repository }}

jobs:

  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Set the variables
      env:
        DEFAULT_VERSION: 'latest'
      run: |
        echo "VERSION=${{ github.event.inputs.version || env.DEFAULT_VERSION }}" >> $GITHUB_ENV
        echo "IMAGE_NAME=${ORIGINAL_IMAGE_NAME,,}" >> $GITHUB_ENV
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build the Docker image
      run: ansible-builder build --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION --container-runtime docker
    - name: Push the Docker image
      run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION
      if: github.event_name != 'pull_request'

